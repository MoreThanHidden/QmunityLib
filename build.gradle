buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff 
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

project.ext {
    major = "1"
    minor = "0"
    mcVersion = "1.11"
}

sourceCompatibility = 1.7
targetCompatibility = 1.7
version = "${project.ext.major}.${project.minor}"
group = "uk.co.qmunity.lib"
archivesBaseName = "QmunityLib"


if (System.getenv().BUILD_NUMBER != null) {
    version += ".${System.getenv().BUILD_NUMBER}"
} else {
    version += " - err"
}

def grabDep(url) {
    ant.get(src: url, dest: 'dep')
	compile files("dep/" + url.substring(url.lastIndexOf("/")));
}

dependencies {
    def f = new File('dep/')
    if (f.exists()) {
        f.delete()
    }
    f.mkdirs()
    if (!f.exists()) {
        f.mkdir()
    }
    println("  Adding dependencies!")
//  compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
//  compile "codechicken:ForgeMultipart:1.7.10-1.2.0.345:dev"
//  compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
//  compile "codechicken:NotEnoughItems:1.7.10-1.0.5.111:dev"
//  compile "mcp.mobius.waila:Waila:1.5.3a_1.7.10"
    println("  Finished adding dependencies!")
}

minecraft {
    version = "${project.ext.mcVersion}-13.19.1.2199"
    runDir = "eclipse/assets"
	mappings = "snapshot_20161225"

    // replacing stuff in the source
    replace '@MAJOR@', project.major
    replace '@MINOR@', project.minor
    replace '@MC_VERSION@', version
    if (System.getenv("BUILD_NUMBER") != null) {
        replace '@BUILD_NUMBER@', System.getenv("BUILD_NUMBER")
    } else {
        replace '@BUILD_NUMBER@', 0
    }

}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include '*.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }


jar {
    appendix = "${project.ext.mcVersion}"
    classifier = "universal"
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output) {
        appendix = "${project.ext.mcVersion}"
        classifier = "deobf"
    }
}

artifacts {
    archives deobfJar
}


uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://" + System.getenv("local_maven"))
            pom {
                groupId = "qmunity"
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'Qmunitylib'
                    url 'https://github.com/Qmunity/QmunityLib'
                    scm {
                        url 'https://github.com/Qmunity/QmunityLib'
                        connection 'scm:git:git@github.com:Qmunity/QmunityLib.git'
                        developerConnection 'scm:git:git@github.com:Qmunity/QmunityLib.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/Qmunity/QmunityLib/issues'
                    }
                    licenses {
                        license {
                            name 'GPLv3'
                            url 'https://github.com/Qmunity/QmunityLib/blob/master/LICENCE.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'MineMaarten'
                            name 'MineMaarten'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Amadornes'
                            name 'Amadornes'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Quetzi'
                            name 'Quetzi'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'K4Unl'
                            name 'K4Unl'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Zness'
                            name 'Zness'
                            roles { role 'artist' }
                        }
                    }
                }
            }
        }
    }
}
